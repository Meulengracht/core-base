name: core26
# version: "26"
adopt-info: bootstrap
summary: Runtime environment based on Ubuntu 26.04
description: |
  The base snap based on the Ubuntu 26.04 release.
confinement: strict
type: base
build-base: devel
grade: devel
assumes: [snapd2.55.5]

parts:
  chisel-libs:
    plugin: nil
    build-packages:
      - golang
    source: https://github.com/Meulengracht/chisel-releases.git
    source-type: git
    source-branch: ubuntu-25.10
    override-build: |
      go install github.com/canonical/chisel/cmd/chisel@latest
      # apparmor
      # bash-completion
      #bzip2
      #cloud-init
      #cryptsetup
      #dbus
      #dbus-user-session
      #distro-info-data
      #dmsetup
      #dosfstools
      #finalrd
      #gnutls-bin
      #fonts-ubuntu
      #iproute2
      #iptables
      #iputils-ping
      #kmod
      #less
      #libengine-pkcs11-openssl
      #libnss-extrausers
      #libopts25
      #libp11-3t64
      #libpam-modules
      #libpam-systemd
      #libpam-pwquality
      #netcat-openbsd
      #netplan.io
      #opensc
      #openssh-server
      #p11-kit
      #p11-kit-modules
      #plymouth-label-ft
      #polkitd
      #rfkill
      #squashfs-tools
      #sudo
      #systemd
      #systemd-coredump
      #systemd-sysv
      #systemd-timesyncd
      #systemd-resolved
      #tzdata
      #udev
      #vim-tiny
      #wpasupplicant
      #locales
      #cracklib-runtime
      SLICES=(
        base-files_base
        openssh-server_bins
      )
      
      case "$(dpkg --print-architecture)" in
          amd64|i386)
              SLICES+=(secureboot-db_data)
              ;;
      esac

      setup_chroot_folder() {
        cd "${CRAFT_PART_INSTALL}"
        mkdir "$1"
        chown "root:$3" "$1"
        chmod "$2" "$1"
        if [ "$#" -eq 4 ]; then
          ln -s "$1" "$4"
        fi
        cd -
      }

      # Initialize the base folder structure where symlinks are expected
      setup_chroot_folder usr       755 root
      setup_chroot_folder usr/bin   755 root bin
      setup_chroot_folder usr/sbin  755 root sbin
      setup_chroot_folder usr/lib   755 root lib
      setup_chroot_folder usr/lib32 755 root lib32
      setup_chroot_folder usr/lib64 755 root lib64

      CHISEL_CACHE_DIR="$(mktemp -d)"

      XDG_CACHE_HOME="$CHISEL_CACHE_DIR" chisel cut --release="${CRAFT_PART_SRC}" --root "${CRAFT_PART_INSTALL}" "${SLICES[@]}"

      # Install foreign libraries
      case "$(dpkg --print-architecture)" in
          amd64)
              XDG_CACHE_HOME="$CHISEL_CACHE_DIR" chisel cut --arch=i386 --release="${CRAFT_PART_SRC}" --root "${CRAFT_PART_INSTALL}" libnss-mdns_libs libc6_libs libc6_gconv libc6_config libgcc-s1_libs
              ;;
          arm64)
              XDG_CACHE_HOME="$CHISEL_CACHE_DIR" chisel cut --arch=armhf --release="${CRAFT_PART_SRC}" --root "${CRAFT_PART_INSTALL}" libnss-mdns_libs libc6_libs libc6_gconv libc6_config libgcc-s1_libs
              ;;
      esac

      "${CRAFT_PROJECT_DIR}/generate-manifest.sh" "$CHISEL_CACHE_DIR/chisel/sha256" "${CRAFT_PART_INSTALL}"

  splash-theme:
    plugin: dump
    source: https://github.com/snapcore/plymouth-theme-ubuntu-core.git
    source-type: git
    organize:
      ubuntu-core: usr/share/plymouth/themes/ubuntu-core
  
  bootstrap:
    after:
      - chisel-libs
    plugin: make
    source: .
    build-packages:
      - shellcheck
      - distro-info
      - python3-debian
      - python3-requests
      - python3-yaml
    # to generate changelogs, it's own snap need to be present,
    # obviously for new core bases this cannot be the case, and
    # we need to wait until the first release with introducing
    # changelogs.
    # TODO change to core26 when available
    build-snaps:
      - core24=latest/beta
    override-pull: |
      craftctl default

      date_tag=$(./get-version.sh)

      # detect whether we are doing a fips build on LP
      if git remote get-url origin | grep "fips"; then
        craftctl set version="$date_tag"+fips
        echo "SNAP_FIPS_BUILD=1" > ./.fips-env
        echo "SNAP_BUILD_NAME=core26-fips" >> ./.fips-env
      else
        craftctl set version=$date_tag
        rm -f ./.fips-env
      fi
    override-prime: |
      craftctl default

      # run all the hooks
      cd ${CRAFT_PART_SRC} && make hooks DESTDIR=${CRAFT_PRIME}

      # ensure build-in tests are run
      cd ${CRAFT_PART_SRC} && make test TESTDIR=${CRAFT_PRIME}
